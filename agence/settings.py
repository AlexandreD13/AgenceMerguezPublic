"""
Django settings for agence project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import re
from pathlib import Path
from shutil import which
from dotenv import load_dotenv

load_dotenv()  # take environment variables from .env.

DATA_DIR = os.path.dirname(os.path.dirname(__file__))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "replaceMe"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = 'DEBUG' in os.environ

# _PROD_HOST = 'agencelesmerguez-zoex-dev.fl0.io'
_PROD_HOST = 'replaceMe.onrender.com'

ALLOWED_HOSTS = [] if DEBUG else [_PROD_HOST]

CSRF_TRUSTED_ORIGINS = [] if DEBUG else [f"https://{_PROD_HOST}"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django_celery_results',
    'django_celery_beat',
    # 'app.apps.AppConfig',
    'app'
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "agence.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    # 'compressor.finders.CompressorFinder'
)

WSGI_APPLICATION = "agence.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

PGDATABASE = os.environ.get('PGDATABASE', 'dev')
PGHOST = os.environ.get('PGHOST')
PGPORT = os.environ.get('PGPORT', 5432)
PGUSER = os.environ.get('PGUSER')
PGPASSWORD = os.environ.get('PGPASSWORD')
PGSSLMODE = os.environ.get('PGSSLMODE', 'require')

PGENDPOINT = PGHOST.split('.')[0]

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": PGDATABASE,
        "HOST": PGHOST,
        "POST": PGPORT,
        "USER": PGUSER,
        "PASSWORD": PGPASSWORD,
        'OPTIONS': {
            'sslmode': PGSSLMODE,
            'options': f'endpoint={PGENDPOINT}',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/New_York"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(DATA_DIR, 'media')
STATIC_ROOT = os.path.join(DATA_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Django 404 errors we want to ignore

IGNORABLE_404_URLS = [
    re.compile(r"favicon.ico"),
    re.compile(r"apple-touch-icon.png"),
    re.compile(r"apple-touch-icon-precomposed.png"),
]

EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST = "smtp-mail.outlook.com"
EMAIL_HOST_USER = os.environ.get('EMAILUSER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAILPASSWORD')

# Celery settings
CELERY_BROKER_URL = f'sqla+postgresql://{PGUSER}:{PGPASSWORD}@{PGHOST}/{PGDATABASE}?sslmode={PGSSLMODE}&options=endpoint%3D{PGENDPOINT}'

# Doesn't work yet
# CELERY_RESULT_BACKEND = f'sqla+postgresql://{PGUSER}:{PGPASSWORD}@{PGHOST}/{PGDATABASE}'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

# Celery Configuration Options
CELERY_TIMEZONE = "America/Montreal"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 1 * 60  # 5 minutes

# Celery results
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'

# OpenCageData
OPEN_CAGE_API_KEY = os.environ.get('OPEN_CAGE_API_KEY')

# Kiwi.com
KIWI_API_URL = 'https://api.tequila.kiwi.com'
KIWI_SEARCH_API_KEY = os.environ.get('KIWI_SEARCH_API_KEY', '')

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "LOCATION": "agence_cache"
    }
}

# Historical data configurations
HISTORICAL_METRICS_MIN_TRIP_DURATION_IN_DAYS = 7
HISTORICAL_METRICS_MAX_TRIP_DURATION_IN_DAYS = 14
HISTORICAL_METRICS_NUMBER_OF_MONTHS_IN_FUTURE_TO_SCAN_WHEN_NOT_INITIALIZED = 12
HISTORICAL_METRICS_NUMBER_OF_MONTHS_IN_FUTURE_TO_SCAN = 2
HISTORICAL_METRICS_NUMBER_OF_DESTINATIONS_TO_SCAN = 1000
HISTORICAL_METRICS_DEAL_THRESHOLD_PERCENT = 0.4
HISTORICAL_METRICS_DEALS_SEARCH_THRESHOLD_PERCENT = 0.2

NPM_BIN_PATH = which("npm")
